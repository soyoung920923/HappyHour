<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mycompany.myapp.board.BoardMapper">

   <select id="getTotalCount" resultType="int" parameterType="Paging">
   		select count(num) from hh_board
   		<include refid="findWhere"/>
   </select>
   
   <select id="selectBoardAll" resultType="Board" parameterType="Paging">
	     select * from(select num
		        , title
		        , content
		        , row_number() over( order by refer	desc, sunbun asc) rn
		        , register_day
		        , if(date_sub(now(), interval 7 day) <![CDATA[<=]]> register_day, 1, 0) as newImg
		        , filename
		        , hits
		        , name
		        , refer
		        , level
		        , sunbun
		          from hh_board	
		          <include refid="findWhere" />) a
         <![CDATA[
	      WHERE a.RN > #{start} and a.RN < #{end}
	      ]]>
   </select>
   
   <update id="updatehits" parameterType="int">
   		update hh_board	set hits = hits+1 where num = #{num}
   </update>
   
   <select id = "selectBoardByNum" resultType="Board" parameterType="int">
   		select * from hh_board where num = #{num}
   </select>

	<sql id="findWhere">
        <if test="findKeyword != null and findKeyword !=''">
           <where>
	           <if test="findType==1"><!-- 제목 -->
	              TITLE LIKE CONCAT('%',#{findKeyword},'%')
	          </if>
	          <if test="findType==2"><!-- 작성자 -->
	              NAME LIKE CONCAT('%',#{findKeyword},'%')
	          </if>
	          <if test="findType==3"><!-- 내용 -->
	              CONTENT LIKE CONCAT('%',#{findKeyword},'%')
	          </if>
           </where>
        </if>
    </sql>
    
    	<!-- 게시물 num MAX값 select -->
	<select id="selectBoardNumMax" parameterType="String" resultType="Integer">
		select max(num) as max from hh_board
	</select>
    
     <insert id="insertBoard" parameterType="Board">
   		insert into hh_board(num, title, content, register_day, filename, origin_filename, category, hits,
   								origin, name, filename2, origin_filename2, id, refer, level, sunbun )
   		values(#{refer}, #{title}, #{content:VARCHAR}, now(), #{filename:VARCHAR}, #{origin_filename:VARCHAR}, 0,
   		#{hits}, #{origin}, #{name}, #{filename2:VARCHAR} ,#{origin_filename2:VARCHAR}, #{id}, #{refer}, 
   		#{level}, #{sunbun})
   </insert>
   
   <delete id="deleteBoard" parameterType="int">
        delete from hh_board where num = #{num}
   </delete>
   
   <update id="updateBoard" parameterType="Board">
       update hh_board set title=#{title}, content=#{content}
        <if test="filename != null and filename != ''">
   		, filename =#{filename}, origin_filename =#{origin_filename}
   		</if>
   		<if test="filename2 != null and filename2 != ''">
   		, filename2 =#{filename2}, origin_filename2 =#{origin_filename2}
   		</if>
   		where num=#{num}
   </update>
   
    <!-- [답변 글쓰기] 
      [1 단계]: 부모글의 refer, lev, sunbun가져오기-->
   <select id="selectreferLevSunbun" parameterType="int" resultType="Board">
      select refer, refer, sunbun from hh_board where num =#{num}
   </select>
   
      <!-- [2단계] 기존에 달려있는 답변글들의 순번을 하나씩 증가시키자.
        내가 방금쓴 글이 위로 올라오도록 하기 위해서-->
   <update id="updateSunbun" parameterType="Board">
      update hh_board set sunbun = sunbun+1
      where refer = #{refer} and sunbun > #{sunbun}
   </update>
   
   <!-- [3 단계]: 답변글 insert하기 -->
   <insert id="replyBoard" parameterType="Board">
      insert into hh_board(title ,content, register_day, filename, origin_filename,
      category, hits, origin, name, filename2, origin_filename2, id , level, refer, sunbun)
      values(#{title}, #{content:VARCHAR}, now(), #{filename:VARCHAR},  #{origin_filename:VARCHAR}, 0
            , #{hits},#{origin}, #{name}, #{filename2:VARCHAR}, #{origin_filename2:VARCHAR}, #{id}, #{level}, #{refer}, #{sunbun})
   </insert>

   <!-- 부모글하고 같은 insert시 num 부분에 refer값이 들어가야한다. 
      # 부모의 refer와 동일하게 넣어준다.(글그룹하고 동일한) -->

   
   	<update id="leaveMember" parameterType="int">
		update hh_user set user_dt = 4
		where origin_num = #{origin_num}
	</update>
	
	<!-- 내가 쓴 글 조회하기  -->
   <select id="getMyBoardTotal" resultType="int" parameterType="Paging">
   		select count(num) from hh_board where id = #{id}
   		<include refid="myfindWhere"/>
   </select>
   
  <select id="myBoardselectAll" resultType="Board" parameterType="Paging">
	     select * from(select num
		        , title
		        , content
		        , row_number() over( order by refer	desc, sunbun asc) RN
		        , register_day
		        , if(date_sub(now(), interval 7 day) <![CDATA[<=]]> register_day, 1, 0) as newImg
		        , filename
		        , hits
		        , name
		        , refer
		        , level
		        , sunbun
		          from hh_board	 
		          where id = #{id}
		          <include refid="myfindWhere" />) a
         <![CDATA[
	      WHERE a.RN > #{start} and a.RN < #{end}
	      ]]>
   </select>

 	<sql id="myfindWhere">
        <if test="findKeyword != null and findKeyword !=''">
	           <if test="findType==1"><!-- 제목 -->
	             AND TITLE LIKE CONCAT('%',#{findKeyword},'%')
	          </if>
	          <if test="findType==2"><!-- 작성자 -->
	             AND NAME LIKE CONCAT('%',#{findKeyword},'%')
	          </if>
	          <if test="findType==3"><!-- 내용 -->
	             AND CONTENT LIKE CONCAT('%',#{findKeyword},'%')
	          </if>
        </if>
    </sql>
    
    <select id="selectCommentCNumMax" parameterType="String" resultType="Integer">
		select max(cnum) as max from hh_comment
	</select>
      
    <select id="selectCommentAll" resultType="Comment">
       select cnum, num, crefer, clevel, csunbun, name, id, ccontent, wdate  from hh_comment where num = #{num} 
       order by crefer	desc, csunbun asc
   </select>
    
    <insert id="insertComment" parameterType="Comment">
        insert into hh_comment (num, cnum, name, id, wdate, ccontent, crefer, clevel, csunbun)
        values(#{num}, #{crefer}, #{name}, #{id}, now(), #{ccontent}, #{crefer}, #{clevel} ,#{csunbun})
    </insert>
    
    <update id="updateComment">
       update hh_comment set ccontent = #{ccontent}, wdate = now() where cnum = #{cnum}
    </update>
    
    <delete id="deleteComment" parameterType="int">
       delete from hh_comment where cnum = #{cnum}
    </delete>
    
</mapper>